@page "/LearnBlazor/BindProp"

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product   </h3>
        <br />
        isActive =
        <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" />

        <br />
        Input Price =
        <input type="number" @bind="@Product.Price" @bind:event="oninput" />

        <br /><br />

        Product Properies :
        <select @bind="selectProp">
            @foreach (var prop in Product.productPropareties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary  </h3>

        Name = @Product.Name
        <br />
        is Active = @Product.IsActive
        <br />
        price = @Product.Price
        <br />
        this Product is @(Product.IsActive ? "Active" : "InActive")
        <br />

        <br />
        Selected Prop : @selectProp
        @if (!string.IsNullOrEmpty(selectProp))
        {
            <p>Select Value : @Product.productPropareties.FirstOrDefault(u => u.Key == selectProp).Value</p>
        }
    </div>
</div>
<div class="col-12 p-4">
    <h3 class="text-success"> Product Table </h3>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Product Name
                </th>
                <th>
                    Price
                </th>
                <th>
                    is Active
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var list in ProductList)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="@list.Name" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="number" @bind-value="@list.Price" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="checkbox" @bind-value="@list.IsActive" checked="@(list.IsActive?"checked":null)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="col-8 p-3">
        <h3>Product Sumary</h3>
        @foreach (var prod in ProductList)
        {
            <p>@prod.Name [@prod.Price] @(prod.IsActive?"Active":"InActive") </p>
        }
    </div>
</div>



@code {

    private string selectProp = "";

    Product Product = new()
        {
            Id = 1,
            Name = "Sarah",
            IsActive = false,
            Price = 1,

            productPropareties = new List<ProductPropareties>()
    {
       new ProductPropareties { Id = 1, Key = "Color", Value = "Red"},
       new ProductPropareties { Id = 2, Key = "Size", Value = "20oz"},
       new ProductPropareties { Id = 3, Key = "Flavor", Value = "Rose"},
    }
        };

    List<Product> ProductList = new();
    protected override void OnInitialized()
    {
        ProductList.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99,
                productPropareties = new List<ProductPropareties>()
                {
                  new ProductPropareties { Id = 1, Key = "Flavor", Value = "Rose"},
                  new ProductPropareties { Id = 2, Key = "Size", Value = "20oz"},
                  new ProductPropareties { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        ProductList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                Price = 9.99,
                IsActive = true,
                productPropareties = new List<ProductPropareties>()
            {
                new ProductPropareties { Id = 1, Key = "Flavor", Value = "Lily" },
                new ProductPropareties { Id = 2, Key = "Size", Value = "18oz" },
                new ProductPropareties {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
}
